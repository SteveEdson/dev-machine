---
- name: Create system aliases
  lineinfile: dest=~/.zshrc line='alias {{ item.key }}=\"{{ item.value }}\"' insertafter='# aliases'
  with_dict: "{{aliases}}"
  vars:
    aliases:
      gc: "git commit -m"
      gs: git status
      gp: git pull
      bu: brew update
      art: php artisan
      derpal: drupal
      derp: drupal
      tweet: t tweet
      tweets: t timeline -n 100
      homestead: 'function __homestead() { (cd {{ ansible_env.HOME }}/.composer/vendor/bin/homestead && vagrant $*); unset -f __homestead; }; __homestead'

- name: Check if gem config exists
  stat: path={{ ansible_env.HOME }}/.gemrc
  register: gem_config_exists

- name: Create empty gem config file
  file: path={{ ansible_env.HOME }}/.gemrc state=touch
  when: gem_config_exists.stat.exists == false

- name: Create gem config
  lineinfile: dest=~/.gemrc line='{{ item }}'
  with_items:
    - "gem: --no-rdoc --no-ri"
    - "install: --no-rdoc --no-ri"

#- name: Check if global npm directory exists
#  stat: path={{ ansible_env.HOME }}/.npm_packages
#  register: npm_dir_exists
#
#- name: Create npm packages directory
#  file: path={{ ansible_env.HOME }}/.npm_packages state=directory
#  when: npm_dir_exists.stat.exists == false

- name: Create Git configs
  git_config: scope=global name={{ item.name }} value={{ item.value }}
  with_items:
    - { name: 'user.name', value: 'Steve Edson' }
    - { name: 'core.pager', value: 'diff-so-fancy | less --tabs=1,5 -R' }
    - { name: 'color.branch', value: "always" }
    - { name: 'color.diff', value: "auto" }
    - { name: 'color.interactive', value: "always" }
    - { name: 'color.status', value: "always" }
    - { name: 'color.ui', value: "always" }
    - { name: 'color.diff-highlight.oldNormal', value: "red bold" }
    - { name: 'color.diff-highlight.oldHighlight', value: "red bold 52" }
    - { name: 'color.diff-highlight.newNormal', value: "green bold" }
    - { name: 'color.diff-highlight.newHighlight', value: "green bold 22" }
    - { name: 'core.autocrlf', value: "input" }
    - { name: 'core.whitespace', value: "trailing-space,space-before-tab,cr-at-eol" }
    - { name: 'alias.cod', value: "checkout development" }
    - { name: 'alias.cos', value: "checkout staging" }
    - { name: 'alias.cop', value: "checkout production" }
    - { name: 'alias.md', value: "merge development" }
    - { name: 'alias.last', value: "log -1 HEAD" }
    - { name: 'alias.headf', value: 'log --graph --pretty=tformat:"%Cblue %h %Cgreen %ad %Cred %an %Creset %s %Cblue%d%Creset" --abbrev-commit --decorate --parents --date=short -n32' }
    - { name: 'diff.tool', value: 'diffmerge' }
    - { name: 'difftool.diffmerge.cmd', value: 'diffmerge "$LOCAL" "$REMOTE"' }
    - { name: 'format.pretty', value: "oneline" }
    - { name: 'merge.tool', value: 'diffmerge' }
    - { name: 'mergetool.diffmerge.cmd', value: 'diffmerge --merge --result="$MERGED" "$LOCAL" "$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\"' }
    - { name: 'mergetool.diffmerge.trustExitCode', value: true }
    - { name: 'push.default', value: "simple" }

- name: Enable text selection within quicklook
  osx_defaults: domain=com.apple.finder key=QLEnableTextSelection type=bool value=true state=present

- name: Show hidden files in finder by default
  osx_defaults: domain=com.apple.finder key=AppleShowAllFiles type=bool value=true state=present

- name: Reduce keyboard key repeat delay
  osx_defaults: key=InitialKeyRepeat type=int value=25 state=present
  
- name: Increase keyboard key repeat speed
  osx_defaults: key=KeyRepeat type=int value=2

- name: Update brew daily
  cron: name="brew autoupdate" special_time="daily"
        job="/usr/local/bin/brew update"

- name: Run this Playbook daily
  cron: name="Run Ansible playbook" special_time="hourly"
        job="source {{ ansible_env.HOME }}/.zshrc; cd {{ playbook_dir }} && ./ansible.sh"

- name: Tap homebrew formulas
  homebrew_tap: name={{ item }} state=present
  with_items:
    - homebrew/dupes
    - homebrew/versions
    - homebrew/php

- name: Install packages from Homebrew
  homebrew: name={{ item }} state=present
  with_items:
    - php70
    - php70-xdebug
    - php-code-sniffer
    - phpmd
    - speedtest_cli
    - httpie
    - exiftool
    - git-extras
    - pandoc
    - tree
    - composer
    - node
    - q
    - git-cal
    - aria2
    - jq
    - diff-so-fancy
    - beanstalkd
    - antigen
    - autoenv
    - android-sdk

- name: Install Brew Cask packages
  ignore_errors: yes
  homebrew_cask: name={{ item }} state=present
  with_items:
    - java
    - alfred
    - virtualbox
    - vagrant
    - phpstorm
    - dash
    - google-chrome
    - firefox
    - atom
    - iterm2
    - imageoptim
    - sequel-pro
    - qlstephen
    - qlmarkdown
    - quicklook-csv
    - betterzipql
    - dropbox
    - marked
    - licecap
    - caret
    - diffmerge
    - bitbar
    - slack
    - disk-inventory-x

- name: ZSH Config
  lineinfile: dest=~/.zshrc line='{{ item }}'
  with_items:
    - "source $(brew --prefix)/share/antigen/antigen.zsh"
    - "antigen bundle zsh-users/zsh-syntax-highlighting"
    - "antigen bundle kennethreitz/autoenv"
    - "antigen apply"
    - "export EDITOR=nano"
    - "export PATH=$PATH:~/.composer/vendor/bin"
    #- "NPM_PACKAGES={{ ansible_env.HOME }}/.npm_packages"
    #- "export PATH=$NPM_PACKAGES/bin:$PATH"


- name: Install Gem packages
  gem: name={{ item }} state=present
  with_items:
    - bundler
    - jekyll
    - t
    - sass
    - compass
    - susy
    - breakpoint
    - gist

- name: Install NPM packages
  npm: name={{ item }} state=present global=yes
  with_items:
    - electron-prebuilt
    - bower
    - gulp
    - jspm
    - pm2
    - grunt-cli
    - npm-check-updates
    - yo
    - babel
    - plato
    - webpack
    - mocha
    - susy
    - nativefier
    - vue-cli
    - autochecker
    - psi
    - a11y

- name: Remove Brew Cask packages
  ignore_errors: yes
  homebrew_cask: name={{ item }} state=absent
  with_items:
    - nanobox

- name: Make sure PIP is installed
  easy_install: name=pip state=present

- name: Install PIP packages
  pip: name={{ item }} state=present
  with_items:
    - tldr
    - proselint
    - whereami

- name: Install global Composer packages
  ignore_errors: yes
  composer: 
    command: "require" 
    working_dir: "{{ ansible_env.HOME }}/.composer"
    no_dev: no
    arguments: "{{ item }}"
  with_items:
    - "laravel/installer"
    - "laravel/homestead"
    - "getkirby/cli"
    - "humbug/humbug"
    - "laravel/valet"

#- name: Setup launch agents for services
#  command: launchctl load {{ ansible_env.HOME }}/Library/LaunchAgents/homebrew.mxcl.{{ item }}.plist
#  with_items:
#    - mysql
#    - beanstalkd
